@mixin dimension($diameter) {
  margin: -($diameter / 2) 0 0 0-($diameter / 2);
  height: $diameter;
  width: $diameter;
}

@mixin clearfix {
	&::after {
		content: '';
		//standard display for clearfix
		display: table;
		clear: both;
	}
}

@mixin absoluteCenter {
	position: absolute;
	top: 40%;
	left: 50%;
	transform: translate(-50%, -50%);
}

@mixin dotAnimation {
	animation-duration: 8s;
	animation-timing-function: ease-in-out;
	animation-iteration-count: infinite;
}

@mixin col1Of1 {
	max-width: $grid-width;
	height: 10rem;
	z-index: 500;
	position: absolute;
	text-align: center;
}

// MEDIA QUERY MANAGER
/*
0 - 480px:			Phone
481px - 1024px:		Tablet Portrait
1025px - 1280px:	Tablet Landscape
1281px - 1799px:	Desktop (normal styles apply)
1800px + : 			Big Desktop

$breakpoint Argument Choices:
- phone-sm
- phone
- phone-md
- phone-log
- tab-port
- tab-land
- big-desktop
*/


// ORDER TO APPLY MEDIA QUERIES: global font size > typography > general layout + grid > page layout > components.
// 1em = 16px

@mixin respond($breakpoint) {
	@if $breakpoint == phone-sm {
		@media only screen and (max-width: 21.875em) { @content }; //  350px
	}

	@if $breakpoint == phone {
		@media only screen and (max-width: 30em) { @content }; //  480px
	}

	@if $breakpoint == phone-md {
		@media only screen and (max-width: 46em) { @content }; // 575px
	}

	@if $breakpoint == phone-lg {
		@media only screen and (max-width: 40em) { @content }; // 640px
	}

	@if $breakpoint == tab-port {
		@media only screen and (max-width: 64em) { @content }; // 1024px
	}

	@if $breakpoint == tab-land {
		@media only screen and (max-width: 80em) { @content }; // 1280px
	}

	@if $breakpoint == big-desktop {
		@media only screen and (min-width: 112.5em) { @content }; // 1800px
	}
}